(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{408:function(s,n,o){"use strict";o.r(n);var t=o(2),a=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("GitHub Actions 是  GitHub 的 持续集成服务， 与2018年10月推出\n简易教程")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#workflow-%E6%96%87%E4%BB%B6"}},[s._v("workflow 文件")])])]),s._v(" "),n("h2",{attrs:{id:"workflow-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workflow-文件"}},[s._v("#")]),s._v(" workflow 文件")]),s._v(" "),n("p",[s._v("GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的.github/workflows目录。")]),s._v(" "),n("p",[s._v("workflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为.yml，比如foo.yml。一个库可以有多个 workflow 文件。GitHub 只要发现.github/workflows目录里面有.yml文件，就会自动运行该文件。")]),s._v(" "),n("p",[s._v("workflow 文件的配置字段非常多，详见官方文档。下面是一些基本字段。")]),s._v(" "),n("p",[n("strong",[s._v("（1）name")]),s._v("\nname字段是 workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  name: Github Actions Demo\n")])])]),n("p",[n("strong",[s._v("（2）on")])]),s._v(" "),n("p",[s._v("on字段指定触发 workflow 的条件，通常是某些事件。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  \n  on: push  on字段指定触发 workflow 的条件，通常是某些事件。\n\n  上面代码指定，push事件触发 workflow。\n\n  on字段也可以是事件的数组。\n\n  on: [push, pull_request]\n")])])]),n("p",[n("strong",[s._v("（3）on.<push|pull_request>.<tags|branches>")]),s._v("\n指定触发事件时，可以限定分支或标签。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  on:\n  push:\n    branches:    \n      - master\n")])])]),n("p",[n("strong",[s._v("（4）jobs.<job_id>.name")])]),s._v(" "),n("p",[s._v("workflow 文件的主体是jobs字段，表示要执行的一项或多项任务。")]),s._v(" "),n("p",[s._v("jobs字段里面，需要写出每一项任务的job_id，具体名称自定义。job_id里面的name字段是任务的说明。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  jobs:\n    my_first_job:\n      name: My first job\n    my_second_job:\n      name: My second job\n  上面代码的jobs字段包含两项任务，job_id分别是my_first_job和my_second_job。\n")])])]),n("p",[n("strong",[s._v("（5）jobs.<job_id>.needs")])]),s._v(" "),n("p",[s._v("needs字段指定当前任务的依赖关系，即运行顺序。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("jobs:\n  job1:\n  job2:\n    needs: job1\n  job3:\n    needs: [job1, job2]\n")])])]),n("p",[s._v("上面代码中，job1必须先于job2完成，而job3等待job1和job2的完成才能运行。因此，这个 workflow 的运行顺序依次为：job1、job2、job3。")]),s._v(" "),n("p",[n("strong",[s._v("（6）jobs.<job_id>.runs-on")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("runs-on字段指定运行所需要的虚拟机环境。它是必填字段。目前可用的虚拟机如下。\n\nubuntu-latest，ubuntu-18.04或ubuntu-16.04\nwindows-latest，windows-2019或windows-2016\nmacOS-latest或macOS-10.14\n下面代码指定虚拟机环境为ubuntu-18.04。\n\n\nruns-on: ubuntu-18.04\n")])])]),n("p",[n("strong",[s._v("（7）jobs.<job_id>.steps")])]),s._v(" "),n("p",[s._v("steps字段指定每个 Job 的运行步骤，可以包含一个或多个步骤。每个步骤都可以指定以下三个字段。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("jobs.<job_id>.steps.name：步骤名称。\njobs.<job_id>.steps.run：该步骤运行的命令或者 action。\njobs.<job_id>.steps.env：该步骤所需的环境变量。\n")])])]),n("p",[s._v("下面是一个完整的 workflow 文件的范例。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("name: Greeting from Mona\non: push\n\njobs:\n  my-job:\n    name: My Job\n    runs-on: ubuntu-latest\n    steps:\n    - name: Print a greeting\n      env:\n        MY_VAR: Hi there! My name is\n        FIRST_NAME: Mona\n        MIDDLE_NAME: The\n        LAST_NAME: Octocat\n      run: |\n        echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.\n")])])]),n("p",[s._v("上面代码中，steps字段只包括一个步骤。该步骤先注入四个环境变量，然后执行一条 Bash 命令。")])])}),[],!1,null,null,null);n.default=a.exports}}]);